version: '3.4' 
networks:
  backend:
  frontend:

services:
  eventcatalaogapi:
    build:
      context: .\EventCatalaogAPI
      dockerfile: Dockerfile
    image: eventcatalaogapi
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalogdb
      DatabaseUserName: sa
      DatabaseUserPassword: Events(!)
      ExternalEventCatalogBaseUrl: http://localhost:5010
    container_name: eventcatalog
    ports:
      - "5010:80"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Events(!)
    container_name: Eventcatalogdb
    ports:
      - "1447:1433"
    networks:
      - backend
  
  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MVc_Client: http://localhost:5200
      BasketApiClient: http://localhost:5055
    container_name: tokenserverdb
    ports:
      - "5020:80"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  webmvc:
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      EventCatalogUrl: http://eventcatalaogapi
      IdentityUrl: http://10.0.0.66:5020
      CallBackUrl: http://localhost:5200
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_2f4ITROidfCujiuGTBgyiAJC009cZUcCjo
      StripePrivateKey: sk_test_9GBGdZmSmMN3dxlI75s2LnRH00YoHqdAtw
    container_name: WebShop 
    ports:
      - "5200:80"
    networks:
      - frontend
    depends_on:
      - eventcatalaogapi
      - tokenserver
      - cart
      - order


  basket.data:
    image: redis
    ports:
      - "6378:6379"
    networks:
      - backend

  cart:
    image: cartapi
    build: 
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://tokenserver
      ConnectionString: basket.data
    container_name: cartstore
    ports:
      - "5055:80"
    networks:
      - backend
      - frontend
    depends_on:
      - basket.data
      - tokenserver
      - rabbitmq

  order:
    image: orderapi
    build: 
      context: .\OrderApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://tokenserver
      SQLSERVER_HOST: eventcatalog
      SA_PASSWORD: Events(!)
      DATABASE: ordersdb
    container_name: orderstore
    ports:
      - "5054:80"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend